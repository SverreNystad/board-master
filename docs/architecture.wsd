@startuml ClassDiagram
package BoardMaster {

		interface Agent {
			+ Action getAction()
		
		}

		abstract class Action {

		}

		interface StateHandler {
    	+ int toMove();
    	+ List<Action> getActions();
    	+ void result(Action action);
    	+ boolean isTerminal();
    	+ int Utility();
    	+ Object getState();
		}

		class AgentFactory {
			+ Agent createAgent(String agentStratgy)
		}
		class ActionFactory {
			+ Action createAction()
		}
		class StateHandlerFactory {
			+ StateHandler createStateHandler(String GameName)
		}
	
		class GameController {
			+ void startGame()
		}

}

@enduml